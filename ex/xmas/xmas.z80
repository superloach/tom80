.org 0x0C00

loop1:
	tree 32, 16

	happy_holidays	3,	4,	c_black
	happy_holidays	4,	3,	c_red
	.rept 10
		spin
	.endm

	happy_holidays	3,	4,	c_green
	.rept 10
		spin
	.endm

	JP	loop1

tree: .macro
	; x, y
	v_poke	%%1-1,	%%2,	c_forest
	v_poke	%%1,	%%2,	c_forest

	v_poke	%%1-1,	%%2+1,	c_forest
	v_poke	%%1,	%%2+1,	c_forest

	v_poke	%%1-2,	%%2+2,	c_forest
	v_poke	%%1-1,	%%2+2,	c_forest
	v_poke	%%1,	%%2+2,	c_forest
	v_poke	%%1+1,	%%2+2,	c_forest

	v_poke	%%1-2,	%%2+3,	c_forest
	v_poke	%%1-1,	%%2+3,	c_forest
	v_poke	%%1,	%%2+3,	c_forest
	v_poke	%%1+1,	%%2+3,	c_forest

happy_holidays: .macro
	; x, y, *color
	letter_h	%%1,	%%2,	%%3
	letter_a	%%1+4,	%%2,	%%3
	letter_p	%%1+8,	%%2,	%%3
	letter_p	%%1+12,	%%2,	%%3
	letter_y	%%1+16,	%%2,	%%3

	letter_h	%%1+24,	%%2,	%%3
	letter_o	%%1+28,	%%2,	%%3
	letter_l	%%1+32,	%%2,	%%3
	letter_i	%%1+36,	%%2,	%%3
	letter_d	%%1+40,	%%2,	%%3
	letter_a	%%1+44,	%%2,	%%3
	letter_y	%%1+48,	%%2,	%%3
	letter_s	%%1+52,	%%2,	%%3
	letter_exc	%%1+56,	%%2,	%%3
.endm

letter_h: .macro
	; x, y, *color
	v_poke	%%1,	%%2,	%%3
	v_poke	%%1,	%%2+1,	%%3
	v_poke	%%1,	%%2+2,	%%3
	v_poke	%%1,	%%2+3,	%%3
	v_poke	%%1,	%%2+4,	%%3

;	v_poke	%%1+1,	%%2,	%%3
;	v_poke	%%1+1,	%%2+1,	%%3
	v_poke	%%1+1,	%%2+2,	%%3
;	v_poke	%%1+1,	%%2+3,	%%3
;	v_poke	%%1+1,	%%2+4,	%%3

	v_poke	%%1+2,	%%2,	%%3
	v_poke	%%1+2,	%%2+1,	%%3
	v_poke	%%1+2,	%%2+2,	%%3
	v_poke	%%1+2,	%%2+3,	%%3
	v_poke	%%1+2,	%%2+4,	%%3
.endm

letter_a: .macro
	v_poke	%%1,	%%2,	%%3
	v_poke	%%1,	%%2+1,	%%3
	v_poke	%%1,	%%2+2,	%%3
	v_poke	%%1,	%%2+3,	%%3
	v_poke	%%1,	%%2+4,	%%3

	v_poke	%%1+1,	%%2,	%%3
;	v_poke	%%1+1,	%%2+1,	%%3
	v_poke	%%1+1,	%%2+2,	%%3
;	v_poke	%%1+1,	%%2+3,	%%3
;	v_poke	%%1+1,	%%2+4,	%%3

	v_poke	%%1+2,	%%2,	%%3
	v_poke	%%1+2,	%%2+1,	%%3
	v_poke	%%1+2,	%%2+2,	%%3
	v_poke	%%1+2,	%%2+3,	%%3
	v_poke	%%1+2,	%%2+4,	%%3
.endm

letter_p: .macro
	v_poke	%%1,	%%2,	%%3
	v_poke	%%1,	%%2+1,	%%3
	v_poke	%%1,	%%2+2,	%%3
	v_poke	%%1,	%%2+3,	%%3
	v_poke	%%1,	%%2+4,	%%3

	v_poke	%%1+1,	%%2,	%%3
;	v_poke	%%1+1,	%%2+1,	%%3
	v_poke	%%1+1,	%%2+2,	%%3
;	v_poke	%%1+1,	%%2+3,	%%3
;	v_poke	%%1+1,	%%2+4,	%%3

	v_poke	%%1+2,	%%2,	%%3
	v_poke	%%1+2,	%%2+1,	%%3
	v_poke	%%1+2,	%%2+2,	%%3
;	v_poke	%%1+2,	%%2+3,	%%3
;	v_poke	%%1+2,	%%2+4,	%%3
.endm

letter_y: .macro
	v_poke	%%1,	%%2,	%%3
	v_poke	%%1,	%%2+1,	%%3
	v_poke	%%1,	%%2+2,	%%3
;	v_poke	%%1,	%%2+3,	%%3
;	v_poke	%%1,	%%2+4,	%%3

;	v_poke	%%1+1,	%%2,	%%3
;	v_poke	%%1+1,	%%2+1,	%%3
	v_poke	%%1+1,	%%2+2,	%%3
	v_poke	%%1+1,	%%2+3,	%%3
	v_poke	%%1+1,	%%2+4,	%%3

	v_poke	%%1+2,	%%2,	%%3
	v_poke	%%1+2,	%%2+1,	%%3
	v_poke	%%1+2,	%%2+2,	%%3
;	v_poke	%%1+2,	%%2+3,	%%3
;	v_poke	%%1+2,	%%2+4,	%%3
.endm

letter_o: .macro
	v_poke	%%1,	%%2,	%%3
	v_poke	%%1,	%%2+1,	%%3
	v_poke	%%1,	%%2+2,	%%3
	v_poke	%%1,	%%2+3,	%%3
	v_poke	%%1,	%%2+4,	%%3

	v_poke	%%1+1,	%%2,	%%3
;	v_poke	%%1+1,	%%2+1,	%%3
;	v_poke	%%1+1,	%%2+2,	%%3
;	v_poke	%%1+1,	%%2+3,	%%3
	v_poke	%%1+1,	%%2+4,	%%3

	v_poke	%%1+2,	%%2,	%%3
	v_poke	%%1+2,	%%2+1,	%%3
	v_poke	%%1+2,	%%2+2,	%%3
	v_poke	%%1+2,	%%2+3,	%%3
	v_poke	%%1+2,	%%2+4,	%%3
.endm

letter_l: .macro
	v_poke	%%1,	%%2,	%%3
	v_poke	%%1,	%%2+1,	%%3
	v_poke	%%1,	%%2+2,	%%3
	v_poke	%%1,	%%2+3,	%%3
	v_poke	%%1,	%%2+4,	%%3

;	v_poke	%%1+1,	%%2,	%%3
;	v_poke	%%1+1,	%%2+1,	%%3
;	v_poke	%%1+1,	%%2+2,	%%3
;	v_poke	%%1+1,	%%2+3,	%%3
	v_poke	%%1+1,	%%2+4,	%%3

;	v_poke	%%1+2,	%%2,	%%3
;	v_poke	%%1+2,	%%2+1,	%%3
;	v_poke	%%1+2,	%%2+2,	%%3
;	v_poke	%%1+2,	%%2+3,	%%3
	v_poke	%%1+2,	%%2+4,	%%3
.endm

letter_i: .macro
	v_poke	%%1,	%%2,	%%3
;	v_poke	%%1,	%%2+1,	%%3
;	v_poke	%%1,	%%2+2,	%%3
;	v_poke	%%1,	%%2+3,	%%3
	v_poke	%%1,	%%2+4,	%%3

	v_poke	%%1+1,	%%2,	%%3
	v_poke	%%1+1,	%%2+1,	%%3
	v_poke	%%1+1,	%%2+2,	%%3
	v_poke	%%1+1,	%%2+3,	%%3
	v_poke	%%1+1,	%%2+4,	%%3

	v_poke	%%1+2,	%%2,	%%3
;	v_poke	%%1+2,	%%2+1,	%%3
;	v_poke	%%1+2,	%%2+2,	%%3
;	v_poke	%%1+2,	%%2+3,	%%3
	v_poke	%%1+2,	%%2+4,	%%3
.endm

letter_d: .macro
	v_poke	%%1,	%%2,	%%3
	v_poke	%%1,	%%2+1,	%%3
	v_poke	%%1,	%%2+2,	%%3
	v_poke	%%1,	%%2+3,	%%3
	v_poke	%%1,	%%2+4,	%%3

	v_poke	%%1+1,	%%2,	%%3
;	v_poke	%%1+1,	%%2+1,	%%3
;	v_poke	%%1+1,	%%2+2,	%%3
;	v_poke	%%1+1,	%%2+3,	%%3
	v_poke	%%1+1,	%%2+4,	%%3

;	v_poke	%%1+2,	%%2,	%%3
	v_poke	%%1+2,	%%2+1,	%%3
	v_poke	%%1+2,	%%2+2,	%%3
	v_poke	%%1+2,	%%2+3,	%%3
	v_poke	%%1+2,	%%2+4,	%%3
.endm

letter_s: .macro
	v_poke	%%1,	%%2,	%%3
	v_poke	%%1,	%%2+1,	%%3
	v_poke	%%1,	%%2+2,	%%3
;	v_poke	%%1,	%%2+3,	%%3
	v_poke	%%1,	%%2+4,	%%3

	v_poke	%%1+1,	%%2,	%%3
;	v_poke	%%1+1,	%%2+1,	%%3
	v_poke	%%1+1,	%%2+2,	%%3
;	v_poke	%%1+1,	%%2+3,	%%3
	v_poke	%%1+1,	%%2+4,	%%3

	v_poke	%%1+2,	%%2,	%%3
;	v_poke	%%1+2,	%%2+1,	%%3
	v_poke	%%1+2,	%%2+2,	%%3
	v_poke	%%1+2,	%%2+3,	%%3
	v_poke	%%1+2,	%%2+4,	%%3
.endm

letter_exc: .macro
	v_poke	%%1,	%%2,	%%3
	v_poke	%%1,	%%2+1,	%%3
	v_poke	%%1,	%%2+2,	%%3
;	v_poke	%%1,	%%2+3,	%%3
	v_poke	%%1,	%%2+4,	%%3
.endm

; spin for delays
spin: .macro
	LD	B,	255
	spin%%M:
		DJNZ	spin%%M
.endm

; write single pixel
v_poke: .macro
	; x, y, *color
	LD	DE,	64 * (%%2) + (%%1)
	LD	A,	(%%3)
	LD	(DE),	A
.endm

; flip display
v_flip: .macro
	LD A, 0xDE
	OUT (0), A
	LD A, 0xAD
	OUT (0), A
	LD A, 0xBE
	OUT (0), A
	LD A, 0xEF
	OUT (0), A
.endm

data:
	; colors
	c_red:		DB	0x30
	c_yellow:	DB	0x3C
	c_green:	DB	0x0C
	c_forest:	DB	0x08
	c_cyan:		DB	0x0F
	c_blue:		DB	0x03
	c_magenta:	DB	0x33
	c_black:	DB	0x00
	c_white:	DB	0x3F

	; keys
	k_up:		DB	0b10000000
	k_down:		DB	0b01000000
	k_left:		DB	0b00100000
	k_right:	DB	0b00010000
	k_a:		DB	0b00001000
	k_b:		DB	0b00000100
	k_c:		DB	0b00000010
	k_menu:		DB	0b00000001
	k_any:		DB	0b11111111
